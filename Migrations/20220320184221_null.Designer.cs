// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectFirstSteps.Models;

#nullable disable

namespace ProjectFirstSteps.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220320184221_null")]
    partial class @null
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjectFirstSteps.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Containt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MailMembre1")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MailMembre2")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("MessageDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("InvDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InvitedMail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InviterMail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.MakingPublications", b =>
                {
                    b.Property<int>("lienId")
                        .HasColumnType("int");

                    b.Property<int>("messageId")
                        .HasColumnType("int");

                    b.Property<int>("photoVideoId")
                        .HasColumnType("int");

                    b.Property<int>("publicationId")
                        .HasColumnType("int");

                    b.HasIndex("lienId");

                    b.HasIndex("messageId");

                    b.HasIndex("photoVideoId");

                    b.HasIndex("publicationId");

                    b.ToTable("MakingPublications");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.Membre", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Email");

                    b.HasIndex("RoleId");

                    b.ToTable("Membres");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.MembreMembre", b =>
                {
                    b.Property<string>("MailMembre2")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MailMembre1")
                        .HasColumnType("varchar(255)");

                    b.HasKey("MailMembre2", "MailMembre1");

                    b.ToTable("MembreMembres");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("MembreEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("RessourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateDePublication")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MembreEmail");

                    b.HasIndex("RessourceId");

                    b.ToTable("Publications");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.Ressource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RessourceID");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomRessource")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Ressource");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ressource");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.Lien", b =>
                {
                    b.HasBaseType("ProjectFirstSteps.Models.Ressource");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Lien");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.Message", b =>
                {
                    b.HasBaseType("ProjectFirstSteps.Models.Ressource");

                    b.Property<string>("libelle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Message");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.PhotoVideo", b =>
                {
                    b.HasBaseType("ProjectFirstSteps.Models.Ressource");

                    b.Property<string>("legende")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("path")
                        .HasColumnType("longtext");

                    b.Property<long>("taille")
                        .HasColumnType("bigint");

                    b.HasDiscriminator().HasValue("PhotoVideo");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.MakingPublications", b =>
                {
                    b.HasOne("ProjectFirstSteps.Models.Lien", "lien")
                        .WithMany()
                        .HasForeignKey("lienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectFirstSteps.Models.Message", "message")
                        .WithMany()
                        .HasForeignKey("messageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectFirstSteps.Models.PhotoVideo", "photoVideo")
                        .WithMany()
                        .HasForeignKey("photoVideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectFirstSteps.Models.Publication", "publication")
                        .WithMany()
                        .HasForeignKey("publicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("lien");

                    b.Navigation("message");

                    b.Navigation("photoVideo");

                    b.Navigation("publication");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.Membre", b =>
                {
                    b.HasOne("ProjectFirstSteps.Models.Role", "Role")
                        .WithMany("Membres")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.Publication", b =>
                {
                    b.HasOne("ProjectFirstSteps.Models.Membre", "Membre")
                        .WithMany()
                        .HasForeignKey("MembreEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectFirstSteps.Models.Ressource", "Ressource")
                        .WithMany()
                        .HasForeignKey("RessourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membre");

                    b.Navigation("Ressource");
                });

            modelBuilder.Entity("ProjectFirstSteps.Models.Role", b =>
                {
                    b.Navigation("Membres");
                });
#pragma warning restore 612, 618
        }
    }
}
